{
  "enabled": true,
  "published": false,
  "noAuthRateLimit": {
    "enabled": true,
    "requests": true,
    "requestsInterval": 3600,
    "requestsMaxPerInterval": 10
  },
  "amountPerRequest": 0.0004,
  "amountPerCompute": 0.0034,
  "amountPerBandwidth": 0.2,
  "hash": "0c360abb",
  "user": "5d5b477eb5fab1199c927a36",
  "project": {
    "description": "Saasify example using Puppeteer",
    "enabled": true,
    "_id": "transitive-bullshit/puppeteer-example",
    "name": "puppeteer-example",
    "user": "5d5b477eb5fab1199c927a36",
    "saas": {
      "name": "puppeteer-example",
      "heading": "puppeteer-example",
      "subheading": "Saasify example using Puppeteer",
      "theme": {
        "name": "okta"
      }
    },
    "createdAt": "2019-09-11T05:55:47.387Z",
    "updatedAt": "2019-09-11T05:55:47.387Z",
    "__v": 0,
    "id": "transitive-bullshit/puppeteer-example"
  },
  "version": "1",
  "readme": "# Puppeteer Example\n\nThis is a simple Saasify project that shows how you can use [headless Chrome](https://pptr.dev) in your serverless functions.\n\n## License\n\nMIT Â© [Travis Fischer](https://transitivebullsh.it)\n",
  "authRateLimit": null,
  "services": [
    {
      "timeout": 0,
      "src": "index.ts",
      "name": "getScreenshot",
      "definition": {
        "config": {
          "defaultExport": true,
          "language": "typescript"
        },
        "params": {
          "context": false,
          "order": [
            "url",
            "type",
            "quality",
            "fullPage",
            "omitBackground",
            "clip",
            "gotoOptions"
          ],
          "schema": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string"
              },
              "type": {
                "enum": [
                  "jpeg",
                  "png"
                ],
                "type": "string",
                "default": "png"
              },
              "quality": {
                "type": "number",
                "default": 100
              },
              "fullPage": {
                "type": "boolean",
                "default": false
              },
              "omitBackground": {
                "type": "boolean",
                "default": true
              },
              "clip": {
                "$ref": "#/definitions/Rect"
              },
              "gotoOptions": {
                "$ref": "#/definitions/DirectNavigationOptions"
              }
            },
            "additionalProperties": false,
            "required": [
              "fullPage",
              "omitBackground",
              "quality",
              "type",
              "url"
            ],
            "definitions": {
              "Rect": {
                "type": "object",
                "properties": {
                  "x": {
                    "type": "number"
                  },
                  "y": {
                    "type": "number"
                  },
                  "width": {
                    "type": "number"
                  },
                  "height": {
                    "type": "number"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "height",
                  "width",
                  "x",
                  "y"
                ]
              },
              "DirectNavigationOptions": {
                "description": "Navigation options for `page.goto`.",
                "type": "object",
                "properties": {
                  "referer": {
                    "description": "Referer header value.\nIf provided it will take preference over the referer header value set by\n[page.setExtraHTTPHeaders()](#pagesetextrahttpheadersheaders).",
                    "type": "string"
                  },
                  "waitUntil": {
                    "description": "When to consider navigation succeeded.",
                    "default": "load Navigation is consider when the `load` event is fired.",
                    "anyOf": [
                      {
                        "type": "array",
                        "items": {
                          "enum": [
                            "domcontentloaded",
                            "load",
                            "networkidle0",
                            "networkidle2"
                          ],
                          "type": "string"
                        }
                      },
                      {
                        "enum": [
                          "domcontentloaded",
                          "load",
                          "networkidle0",
                          "networkidle2"
                        ],
                        "type": "string"
                      }
                    ]
                  },
                  "timeout": {
                    "description": "Maximum navigation time in milliseconds, pass 0 to disable timeout.",
                    "default": 30000,
                    "type": "number"
                  }
                },
                "additionalProperties": false
              }
            },
            "$schema": "http://json-schema.org/draft-07/schema#"
          }
        },
        "returns": {
          "async": true,
          "http": true,
          "schema": {
            "type": "object",
            "properties": {
              "result": {
                "$ref": "#/definitions/HttpResponse"
              }
            },
            "additionalProperties": false,
            "definitions": {
              "HttpResponse": {
                "description": "Fallback to allow raw HTTP responses that are not type-checked.",
                "type": "object",
                "properties": {
                  "statusCode": {
                    "type": "number"
                  },
                  "headers": {
                    "$ref": "#/definitions/OutgoingHttpHeaders"
                  },
                  "body": {
                    "description": "Raw data is stored in instances of the Buffer class.\nA Buffer is similar to an array of integers but corresponds to a raw memory allocation outside the V8 heap.  A Buffer cannot be resized.\nValid string encodings: 'ascii'|'utf8'|'utf16le'|'ucs2'(alias of 'utf16le')|'base64'|'binary'(deprecated)|'hex'",
                    "type": "array",
                    "items": {
                      "type": "number"
                    }
                  }
                },
                "additionalProperties": false
              },
              "OutgoingHttpHeaders": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              }
            },
            "$schema": "http://json-schema.org/draft-07/schema#"
          }
        },
        "version": "1.1.0",
        "title": "getScreenshot"
      },
      "url": "http://localhost:5000/1/call/transitive-bullshit/puppeteer-example@0c360abb"
    }
  ],
  "createdAt": "2019-09-11T05:55:52.417Z",
  "updatedAt": "2019-09-11T05:55:52.417Z",
  "url": "http://localhost:5000/1/call/transitive-bullshit/puppeteer-example@0c360abb",
  "openApiUrl": "http://localhost:5000/1/deployments/openapi/transitive-bullshit/puppeteer-example@0c360abb",
  "id": "transitive-bullshit/puppeteer-example@0c360abb"
}
